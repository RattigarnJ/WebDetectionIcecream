{"ast":null,"code":"import'../App.css';import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Member=()=>{const navigate=useNavigate();const[users,setUsers]=useState([]);const[editingUser,setEditingUser]=useState(null);const token=localStorage.getItem(\"token\");// ✅ ดึง Token จาก Local Storage\nuseEffect(()=>{fetchUsers();},[]);const fetchUsers=async()=>{try{const response=await fetch(\"http://localhost:5000/users\");const data=await response.json();setUsers(data);}catch(error){console.error(\"Error fetching users:\",error);}};const handleEdit=user=>{// ใช้ plain_password จาก backend ถ้ามี\nsetEditingUser({...user,plain_password:user.plain_password||\"\"// แสดง plain password เดิม ถ้าไม่มีให้เป็นว่าง\n});};const handleSave=async()=>{try{const userToUpdate={id:editingUser.id,username:editingUser.username,password:editingUser.plain_password,// ส่ง plain password\nrole:editingUser.role};await fetch(`http://localhost:5000/update-user`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":`Bearer ${token}`// ✅ ส่ง Token ไปกับ Request\n},body:JSON.stringify(userToUpdate)});setUsers(users.map(user=>user.id===editingUser.id?editingUser:user));setEditingUser(null);}catch(error){console.error(\"Error updating user:\",error);}};const handleDelete=async userId=>{if(!token){alert(\"You are not authorized. Please log in.\");navigate(\"/login\");// ✅ ถ้าไม่มี Token ให้ Redirect ไปหน้า Login\nreturn;}const confirmDelete=window.confirm(\"Are you sure you want to delete this user?\");if(confirmDelete){try{const response=await fetch(`http://localhost:5000/delete-user/${userId}`,{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":`Bearer ${token}`// ✅ ส่ง Token ไปกับ Request\n}});const result=await response.json();if(response.ok){setUsers(users.filter(user=>user.id!==userId));// ✅ อัปเดต UI\n}else{alert(result.error||\"Failed to delete user.\");}}catch(error){console.error(\"Error deleting user:\",error);}}};return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh',width:'100vw',backgroundColor:'#f4f4f4'},children:/*#__PURE__*/_jsxs(\"div\",{style:{width:'90%'},children:[/*#__PURE__*/_jsx(\"p\",{className:\"Text-Welcome\",style:{textAlign:'center',marginTop:'-40px'},children:\"MEMBERS\"}),/*#__PURE__*/_jsxs(\"table\",{style:{width:'100%',borderCollapse:'collapse',backgroundColor:'white',borderRadius:'10px',overflow:'hidden'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{padding:'20px'},children:\"Username\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Bcrypt Password\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Role\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{style:{textAlign:'center'},children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:(editingUser===null||editingUser===void 0?void 0:editingUser.id)===user.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingUser.username,onChange:e=>setEditingUser({...editingUser,username:e.target.value})}):user.username}),/*#__PURE__*/_jsx(\"td\",{children:user.password}),\" \",/*#__PURE__*/_jsx(\"td\",{children:(editingUser===null||editingUser===void 0?void 0:editingUser.id)===user.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingUser.plain_password,onChange:e=>setEditingUser({...editingUser,plain_password:e.target.value}),placeholder:\"Enter new password\"}):/*#__PURE__*/_jsx(\"span\",{children:\"********\"})// แสดง plain password ถ้ามี\n}),/*#__PURE__*/_jsx(\"td\",{children:(editingUser===null||editingUser===void 0?void 0:editingUser.id)===user.id?/*#__PURE__*/_jsxs(\"select\",{value:editingUser.role,onChange:e=>setEditingUser({...editingUser,role:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"Dev\",children:\"Dev\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Admin\",children:\"Admin\"}),/*#__PURE__*/_jsx(\"option\",{value:\"User\",children:\"User\"})]}):user.role}),/*#__PURE__*/_jsx(\"td\",{children:(editingUser===null||editingUser===void 0?void 0:editingUser.id)===user.id?/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,children:\"Save\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEdit(user),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(user.id),children:\"Delete\"})]})})]},user.id))})]})]})});};export default Member;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Member","navigate","users","setUsers","editingUser","setEditingUser","token","localStorage","getItem","fetchUsers","response","fetch","data","json","error","console","handleEdit","user","plain_password","handleSave","userToUpdate","id","username","password","role","method","headers","body","JSON","stringify","map","handleDelete","userId","alert","confirmDelete","window","confirm","result","ok","filter","style","display","justifyContent","alignItems","height","width","backgroundColor","children","className","textAlign","marginTop","borderCollapse","borderRadius","overflow","padding","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/Ratti/WebDetectionIcecream/frontend/src/pages/member.js"],"sourcesContent":["import '../App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Member = () => {\r\n    const navigate = useNavigate();\r\n    const [users, setUsers] = useState([]);\r\n    const [editingUser, setEditingUser] = useState(null);\r\n    const token = localStorage.getItem(\"token\");  // ✅ ดึง Token จาก Local Storage\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/users\");\r\n            const data = await response.json();\r\n            setUsers(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching users:\", error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (user) => {\r\n        // ใช้ plain_password จาก backend ถ้ามี\r\n        setEditingUser({\r\n            ...user,\r\n            plain_password: user.plain_password || \"\" // แสดง plain password เดิม ถ้าไม่มีให้เป็นว่าง\r\n        });\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        try {\r\n\r\n            const userToUpdate = {\r\n                id: editingUser.id,\r\n                username: editingUser.username,\r\n                password: editingUser.plain_password, // ส่ง plain password\r\n                role: editingUser.role\r\n            };\r\n\r\n            await fetch(`http://localhost:5000/update-user`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`  // ✅ ส่ง Token ไปกับ Request\r\n                },\r\n                body: JSON.stringify(userToUpdate)\r\n            });\r\n\r\n            setUsers(users.map(user => user.id === editingUser.id ? editingUser : user));\r\n            setEditingUser(null);\r\n        } catch (error) {\r\n            console.error(\"Error updating user:\", error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (userId) => {\r\n        if (!token) {\r\n            alert(\"You are not authorized. Please log in.\");\r\n            navigate(\"/login\");  // ✅ ถ้าไม่มี Token ให้ Redirect ไปหน้า Login\r\n            return;\r\n        }\r\n\r\n        const confirmDelete = window.confirm(\"Are you sure you want to delete this user?\");\r\n        if (confirmDelete) {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/delete-user/${userId}`, {\r\n                    method: \"DELETE\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`  // ✅ ส่ง Token ไปกับ Request\r\n                    }\r\n                });\r\n\r\n                const result = await response.json();\r\n                if (response.ok) {\r\n                    setUsers(users.filter(user => user.id !== userId));  // ✅ อัปเดต UI\r\n                } else {\r\n                    alert(result.error || \"Failed to delete user.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error deleting user:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', width: '100vw', backgroundColor: '#f4f4f4' }}>\r\n            <div style={{ width: '90%' }}>\r\n                <p className='Text-Welcome' style={{ textAlign: 'center', marginTop: '-40px' }}>MEMBERS</p>\r\n                <table style={{\r\n                    width: '100%',\r\n                    borderCollapse: 'collapse',\r\n                    backgroundColor: 'white',\r\n                    borderRadius: '10px',\r\n                    overflow: 'hidden'\r\n                }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ padding: '20px' }}>Username</th>\r\n                            <th>Bcrypt Password</th>\r\n                            <th>Password</th>\r\n                            <th>Role</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody style={{ textAlign: 'center' }}>\r\n                        {users.map(user => (\r\n                            <tr key={user.id}>\r\n                                <td>\r\n                                    {editingUser?.id === user.id ? (\r\n                                        <input type=\"text\" value={editingUser.username}\r\n                                            onChange={(e) => setEditingUser({ ...editingUser, username: e.target.value })}\r\n                                        />\r\n                                    ) : user.username}\r\n                                </td>\r\n                                <td>{user.password}</td> {/* แสดง hashed password */}\r\n                                <td>\r\n                                    {editingUser?.id === user.id ? (\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={editingUser.plain_password}\r\n                                            onChange={(e) => setEditingUser({\r\n                                                ...editingUser,\r\n                                                plain_password: e.target.value\r\n                                            })}\r\n                                            placeholder=\"Enter new password\"\r\n                                        />\r\n                                    ) : (\r\n                                        <span>********</span> // แสดง plain password ถ้ามี\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {editingUser?.id === user.id ? (\r\n                                        <select value={editingUser.role}\r\n                                            onChange={(e) => setEditingUser({ ...editingUser, role: e.target.value })}\r\n                                        >\r\n                                            <option value=\"Dev\">Dev</option>\r\n                                            <option value=\"Admin\">Admin</option>\r\n                                            <option value=\"User\">User</option>\r\n                                        </select>\r\n                                    ) : user.role}\r\n                                </td>\r\n                                <td>\r\n                                    {editingUser?.id === user.id ? (\r\n                                        <button onClick={handleSave}>Save</button>\r\n                                    ) : (\r\n                                        <>\r\n                                            <button onClick={() => handleEdit(user)}>Edit</button>\r\n                                            <button onClick={() => handleDelete(user.id)}>Delete</button>\r\n                                        </>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Member;\r\n"],"mappings":"AAAA,MAAO,YAAY,CACnB,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE/C,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACjB,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACS,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAAAe,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAG;AAE9ChB,SAAS,CAAC,IAAM,CACZiB,UAAU,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAC3D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCV,QAAQ,CAACS,IAAI,CAAC,CAClB,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CACjD,CACJ,CAAC,CAED,KAAM,CAAAE,UAAU,CAAIC,IAAI,EAAK,CACzB;AACAZ,cAAc,CAAC,CACX,GAAGY,IAAI,CACPC,cAAc,CAAED,IAAI,CAACC,cAAc,EAAI,EAAG;AAC9C,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CAEA,KAAM,CAAAC,YAAY,CAAG,CACjBC,EAAE,CAAEjB,WAAW,CAACiB,EAAE,CAClBC,QAAQ,CAAElB,WAAW,CAACkB,QAAQ,CAC9BC,QAAQ,CAAEnB,WAAW,CAACc,cAAc,CAAE;AACtCM,IAAI,CAAEpB,WAAW,CAACoB,IACtB,CAAC,CAED,KAAM,CAAAb,KAAK,CAAC,mCAAmC,CAAE,CAC7Cc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UAAUpB,KAAK,EAAI;AACxC,CAAC,CACDqB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACT,YAAY,CACrC,CAAC,CAAC,CAEFjB,QAAQ,CAACD,KAAK,CAAC4B,GAAG,CAACb,IAAI,EAAIA,IAAI,CAACI,EAAE,GAAKjB,WAAW,CAACiB,EAAE,CAAGjB,WAAW,CAAGa,IAAI,CAAC,CAAC,CAC5EZ,cAAc,CAAC,IAAI,CAAC,CACxB,CAAE,MAAOS,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CAAC,CAED,KAAM,CAAAiB,YAAY,CAAG,KAAO,CAAAC,MAAM,EAAK,CACnC,GAAI,CAAC1B,KAAK,CAAE,CACR2B,KAAK,CAAC,wCAAwC,CAAC,CAC/ChC,QAAQ,CAAC,QAAQ,CAAC,CAAG;AACrB,OACJ,CAEA,KAAM,CAAAiC,aAAa,CAAGC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,CAClF,GAAIF,aAAa,CAAE,CACf,GAAI,CACA,KAAM,CAAAxB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qCAAqCqB,MAAM,EAAE,CAAE,CACxEP,MAAM,CAAE,QAAQ,CAChBC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UAAUpB,KAAK,EAAI;AACxC,CACJ,CAAC,CAAC,CAEF,KAAM,CAAA+B,MAAM,CAAG,KAAM,CAAA3B,QAAQ,CAACG,IAAI,CAAC,CAAC,CACpC,GAAIH,QAAQ,CAAC4B,EAAE,CAAE,CACbnC,QAAQ,CAACD,KAAK,CAACqC,MAAM,CAACtB,IAAI,EAAIA,IAAI,CAACI,EAAE,GAAKW,MAAM,CAAC,CAAC,CAAG;AACzD,CAAC,IAAM,CACHC,KAAK,CAACI,MAAM,CAACvB,KAAK,EAAI,wBAAwB,CAAC,CACnD,CACJ,CAAE,MAAOA,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CACJ,CAAC,CAED,mBACInB,IAAA,QAAK6C,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAQ,CAAEC,MAAM,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAO,CAAEC,eAAe,CAAE,SAAU,CAAE,CAAAC,QAAA,cACzIlD,KAAA,QAAK2C,KAAK,CAAE,CAAEK,KAAK,CAAE,KAAM,CAAE,CAAAE,QAAA,eACzBpD,IAAA,MAAGqD,SAAS,CAAC,cAAc,CAACR,KAAK,CAAE,CAAES,SAAS,CAAE,QAAQ,CAAEC,SAAS,CAAE,OAAQ,CAAE,CAAAH,QAAA,CAAC,SAAO,CAAG,CAAC,cAC3FlD,KAAA,UAAO2C,KAAK,CAAE,CACVK,KAAK,CAAE,MAAM,CACbM,cAAc,CAAE,UAAU,CAC1BL,eAAe,CAAE,OAAO,CACxBM,YAAY,CAAE,MAAM,CACpBC,QAAQ,CAAE,QACd,CAAE,CAAAN,QAAA,eACEpD,IAAA,UAAAoD,QAAA,cACIlD,KAAA,OAAAkD,QAAA,eACIpD,IAAA,OAAI6C,KAAK,CAAE,CAAEc,OAAO,CAAE,MAAO,CAAE,CAAAP,QAAA,CAAC,UAAQ,CAAI,CAAC,cAC7CpD,IAAA,OAAAoD,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBpD,IAAA,OAAAoD,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBpD,IAAA,OAAAoD,QAAA,CAAI,MAAI,CAAI,CAAC,cACbpD,IAAA,OAAAoD,QAAA,CAAI,SAAO,CAAI,CAAC,EAChB,CAAC,CACF,CAAC,cACRpD,IAAA,UAAO6C,KAAK,CAAE,CAAES,SAAS,CAAE,QAAS,CAAE,CAAAF,QAAA,CACjC7C,KAAK,CAAC4B,GAAG,CAACb,IAAI,eACXpB,KAAA,OAAAkD,QAAA,eACIpD,IAAA,OAAAoD,QAAA,CACK,CAAA3C,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEiB,EAAE,IAAKJ,IAAI,CAACI,EAAE,cACxB1B,IAAA,UAAO4D,IAAI,CAAC,MAAM,CAACC,KAAK,CAAEpD,WAAW,CAACkB,QAAS,CAC3CmC,QAAQ,CAAGC,CAAC,EAAKrD,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAEkB,QAAQ,CAAEoC,CAAC,CAACC,MAAM,CAACH,KAAM,CAAC,CAAE,CACjF,CAAC,CACFvC,IAAI,CAACK,QAAQ,CACjB,CAAC,cACL3B,IAAA,OAAAoD,QAAA,CAAK9B,IAAI,CAACM,QAAQ,CAAK,CAAC,IAAC,cACzB5B,IAAA,OAAAoD,QAAA,CACK,CAAA3C,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEiB,EAAE,IAAKJ,IAAI,CAACI,EAAE,cACxB1B,IAAA,UACI4D,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEpD,WAAW,CAACc,cAAe,CAClCuC,QAAQ,CAAGC,CAAC,EAAKrD,cAAc,CAAC,CAC5B,GAAGD,WAAW,CACdc,cAAc,CAAEwC,CAAC,CAACC,MAAM,CAACH,KAC7B,CAAC,CAAE,CACHI,WAAW,CAAC,oBAAoB,CACnC,CAAC,cAEFjE,IAAA,SAAAoD,QAAA,CAAM,UAAQ,CAAM,CAAE;AACzB,CACD,CAAC,cACLpD,IAAA,OAAAoD,QAAA,CACK,CAAA3C,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEiB,EAAE,IAAKJ,IAAI,CAACI,EAAE,cACxBxB,KAAA,WAAQ2D,KAAK,CAAEpD,WAAW,CAACoB,IAAK,CAC5BiC,QAAQ,CAAGC,CAAC,EAAKrD,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAEoB,IAAI,CAAEkC,CAAC,CAACC,MAAM,CAACH,KAAM,CAAC,CAAE,CAAAT,QAAA,eAE1EpD,IAAA,WAAQ6D,KAAK,CAAC,KAAK,CAAAT,QAAA,CAAC,KAAG,CAAQ,CAAC,cAChCpD,IAAA,WAAQ6D,KAAK,CAAC,OAAO,CAAAT,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpCpD,IAAA,WAAQ6D,KAAK,CAAC,MAAM,CAAAT,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC9B,CAAC,CACT9B,IAAI,CAACO,IAAI,CACb,CAAC,cACL7B,IAAA,OAAAoD,QAAA,CACK,CAAA3C,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEiB,EAAE,IAAKJ,IAAI,CAACI,EAAE,cACxB1B,IAAA,WAAQkE,OAAO,CAAE1C,UAAW,CAAA4B,QAAA,CAAC,MAAI,CAAQ,CAAC,cAE1ClD,KAAA,CAAAE,SAAA,EAAAgD,QAAA,eACIpD,IAAA,WAAQkE,OAAO,CAAEA,CAAA,GAAM7C,UAAU,CAACC,IAAI,CAAE,CAAA8B,QAAA,CAAC,MAAI,CAAQ,CAAC,cACtDpD,IAAA,WAAQkE,OAAO,CAAEA,CAAA,GAAM9B,YAAY,CAACd,IAAI,CAACI,EAAE,CAAE,CAAA0B,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC/D,CACL,CACD,CAAC,GA5CA9B,IAAI,CAACI,EA6CV,CACP,CAAC,CACC,CAAC,EACL,CAAC,EACP,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAArB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}